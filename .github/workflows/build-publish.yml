name: Build & Publish Site
description: Build and publish the miterra-site to GitHub Pages.

on:
  push:
    branches: [main]
  
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'Source repo'
        required: true
        type: string
      source_message:
        description: 'Source message'
        required: true
        type: string

# Allow only 1 concurrent run
concurrency:
  group: miterra-site-build
  cancel-in-progress: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-publish:
    if: github.event_name == 'workflow_dispatch' || startsWith(github.event.head_commit.message, '[Release]')
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    # ----------------------------------------
    # Build
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install Antora with extensions
      run: ./scripts/npm-install.sh
    
    - name: Generate GitHub App installation access token (IAT)
      id: generate_iat
      uses: actions/create-github-app-token@v2
      with:
        app-id: ${{ secrets.BOT_APP_ID }}
        private-key: ${{ secrets.BOT_APP_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}

    - name: Build site
      env:
        GIT_CREDENTIALS: https://x-access-token:${{ steps.generate_iat.outputs.token }}@github.com
      run: ./scripts/build-site.sh

    # ----------------------------------------
    # Deploy: deploy must take place before release, as the release step will modify the build.
    - name: Configure GitHub Pages
      uses: actions/configure-pages@v5
    
    - name: Upload artifacts to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./build
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    # ----------------------------------------
    # Release
    - name: Get next version
      uses: reecetech/version-increment@2024.10.1
      id: version
      with:
        use_api: true
        scheme: calver

    - name: Generate release message
      id: generate_message
      run: |
        echo "datetime=$(date +'%Y-%m-%dT%H:%M:%S%z')" >> $GITHUB_ENV

        if [[ '${{ github.event_name }}' == 'workflow_dispatch' ]]; then
          echo "trigger_msg=${{ github.event.inputs.source_repo }}" >> $GITHUB_OUTPUT
          echo "commit_msg=${{ github.event.inputs.source_message }}" >> $GITHUB_OUTPUT
        else
          echo "trigger_msg='${{ github.event_name }} event'" >> $GITHUB_OUTPUT
          echo "commit_msg=${{ github.event.head_commit.message }}" >> $GITHUB_OUTPUT
        fi

    - name: Prepare release files
      run: ./scripts/prep-release.sh

    - name: Make zip bundle
      uses: montudor/action-zip@v1.0.0
      with:
        args: zip -qq -r miterra-site.zip ./miterra-site

    - name: Create new release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        draft: false
        prerelease: false
        make_latest: true
        name: ${{ steps.version.outputs.v-version }}
        tag_name: ${{ steps.version.outputs.v-version }}
        body: |
          Site build activated from `${{ steps.generate_message.outputs.trigger_msg }}`.
          Release ${{ steps.version.outputs.v-version }} generated by GitHub Actions on ${{ env.datetime }}.
          Commit message: ${{ steps.generate_message.outputs.commit_msg }}
        files: ./miterra-site.zip
        fail_on_unmatched_files: true

    # ----------------------------------------
    # Tag source repo
    - name: Tag miterra-docs
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ steps.generate_iat.outputs.token }}
      with:
        draft: false
        prerelease: false
        make_latest: true
        repository: SSM-WEnR/miterra-docs
        name: ${{ steps.version.outputs.v-version }}
        tag_name: ${{ steps.version.outputs.v-version }}
        body: This release is created as a snapshot for `miterra-site` release ${{ steps.version.outputs.v-version }} on ${{ env.datetime }}.
